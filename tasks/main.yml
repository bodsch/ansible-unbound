---

- include_tasks: prepare.yml

- name: install dependencies
  package:
    name: "{{ unbound_dependencies }}"
    state: present

- name: install unbound
  package:
    name: unbound
    state: present

# - include_tasks: chroot.yml

- name: test existing root.key
  stat:
    path: "/var/lib/unbound/root.key"
    get_mime: true
  register: __unbound_rootkey_exists

- name: create root.key
  command: /usr/lib/unbound/package-helper root_trust_anchor_update
  when:
    - ansible_os_family | lower == 'debian'
    - not __unbound_rootkey_exists.stat.exists

- name: remove distribution config files
  file:
    path: "{{ unbound_conf_dir }}/unbound.conf.d/{{ item }}"
    state: absent
  loop:
    - qname-minimisation.conf
    - root-auto-trust-anchor-file.conf

- name: unbound.log handling
  block:
    - name: test existing unbound.log
      stat:
        path: "/{{ unbound_config_server.logfile }}"
        get_mime: true
      register: __unbound_logfile_exists

    - name: create unbound.log
      file:
        name: "{{ unbound_config_server.logfile }}"
        state: touch
        owner: "{{ unbound_user }}"
        group: "{{ unbound_group }}"
        mode: 0666
      when:
        - not __unbound_logfile_exists.stat.exists
  when:
    - unbound_config_server.logfile is defined
    - unbound_config_server.logfile | length != 0

- include_tasks: configure.yml

- name: disable systemd-resolved
  service:
    name: systemd-resolved
    state: stopped
    enabled: false
  when:
    - ansible_service_mgr == 'systemd'

- name: enable unbound service
  service:
    name: unbound
    enabled: true
    state: started
